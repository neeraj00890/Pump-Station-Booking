{"version":3,"sources":["./src/app/booking/book-slot-grid/book-slot-grid.component.html","./src/app/booking/booking-form/booking-form.component.html","./src/app/booking/book-slot-grid/book-slot-grid.component.css","./src/app/booking/book-slot-grid/book-slot-grid.component.ts","./src/app/booking/booking-form/booking-form.component.css","./src/app/booking/booking-form/booking-form.component.ts","./src/app/booking/booking-service.ts","./src/app/booking/booking.module.ts","./src/app/booking/booking.routing.module.ts","./src/app/booking/bookingFormResolver.ts"],"names":[],"mappings":"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","file":"booking-booking-module.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"col-md-2\\\"></div>\\n        <div class=\\\"col-md-8\\\">\\n            <h3>Booked Details</h3>\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    \\n                <ng-container matColumnDef=\\\"type\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Booking Type </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.type}} </td>\\n                </ng-container>\\n              \\n               \\n                <ng-container matColumnDef=\\\"start\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Booking Start </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.start}} </td>\\n                </ng-container>\\n              \\n                \\n                <ng-container matColumnDef=\\\"end\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Booking end </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.end}} </td>\\n                </ng-container>\\n              \\n              \\n                <ng-container matColumnDef=\\\"station\\\">\\n                  <th mat-header-cell *matHeaderCellDef>  Station </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.station}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"Username\\\">\\n                    <th mat-header-cell *matHeaderCellDef>  User Name </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.userId.userName}} </td>\\n                  </ng-container>\\n              \\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n              </table>\\n        </div>\\n        <div class=\\\"col-md-2\\\"></div>\\n    </div>\\n</div>\\n\\n  \\n  \\n  \\n  <!-- Copyright 2020 Google LLC. All Rights Reserved.\\n      Use of this source code is governed by an MIT-style license that\\n      can be found in the LICENSE file at http://angular.io/license -->\"","export default \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"col-md-4\\\">\\n\\n        </div>\\n        <div class=\\\"col-md-4 well\\\">\\n            <h3>Booking Form</h3>\\n            <form action=\\\"\\\" #bookForm ='ngForm'>\\n\\n\\n  \\n\\n                <mat-form-field appearance=\\\"fill\\\">\\n                  <mat-label>Book for</mat-label>\\n                  <mat-select name =\\\"type\\\"  [(ngModel)]=\\\"type\\\">\\n                    <mat-option value=\\\"Gas\\\">Gas</mat-option>\\n                    <mat-option value=\\\"Diesel\\\" >Diesel</mat-option>\\n                    <mat-option value=\\\"Petrol\\\" >Petrol</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n                <br>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                  <mat-label>Avaiable Station</mat-label>\\n                  <mat-select name =\\\"station\\\"  [(ngModel)]=\\\"station\\\" >\\n                    <mat-option *ngFor=\\\" let station of fuelStation\\\" [value]=\\\"station.station_name\\\">{{station.station_name}}</mat-option>\\n                    \\n                  </mat-select>\\n                </mat-form-field>\\n                <br>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                  <mat-label>Start time</mat-label>\\n                <!-- #docregion toggle -->\\n                  <input name=\\\"startTime\\\" matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"startTime\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker></mat-datepicker>\\n                <!-- #enddocregion toggle -->\\n                </mat-form-field>\\n                <br>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                  <mat-label>End time</mat-label>\\n                <!-- #docregion toggle -->\\n                  <input matInput name=\\\"endTime\\\" [matDatepicker]=\\\"picker1\\\" [(ngModel)]=\\\"endTime\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker1></mat-datepicker>\\n                <!-- #enddocregion toggle -->\\n                </mat-form-field>\\n                <br>\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onBooking(bookForm)\\\">Book</button>\\n               \\n               \\n          </form>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            \\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n  \\n  \\n  <!-- Copyright 2020 Google LLC. All Rights Reserved.\\n      Use of this source code is governed by an MIT-style license that\\n      can be found in the LICENSE file at http://angular.io/license -->\"","export default \"td {\\r\\n    padding: 10px !important;\\r\\n}\\r\\nth{\\r\\n    padding: 10px !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9va2luZy9ib29rLXNsb3QtZ3JpZC9ib29rLXNsb3QtZ3JpZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksd0JBQXdCO0FBQzVCO0FBQ0E7SUFDSSx3QkFBd0I7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9ib29raW5nL2Jvb2stc2xvdC1ncmlkL2Jvb2stc2xvdC1ncmlkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZCB7XHJcbiAgICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxudGh7XHJcbiAgICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BookingService } from '../booking-service';\n\n@Component({\n  selector: 'app-book-slot-grid',\n  templateUrl: './book-slot-grid.component.html',\n  styleUrls: ['./book-slot-grid.component.css']\n})\nexport class BookSlotGridComponent implements OnInit {\n\n  displayedColumns: string[] = ['type', 'start', 'end', 'station','Username'];\n  dataSource;\n  bookings=[]\n  constructor(private bookService:BookingService) {\n   \n   }\n\n  ngOnInit() {\n\n    this.bookService.loadGridData().subscribe((data)=>{\n    if(data['success']){\n      delete data['success'];\n      for(let x in data){\n        this.bookings.push(data[x])\n      }\n      this.dataSource=this.bookings;\n      console.log(this.bookings);\n\n    }\n    })\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tpbmcvYm9va2luZy1mb3JtL2Jvb2tpbmctZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BookingService } from '../booking-service';\ndeclare var Map:any;\n@Component({\n  selector: 'app-booking-form',\n  templateUrl: './booking-form.component.html',\n  styleUrls: ['./booking-form.component.css']\n})\nexport class BookingFormComponent implements OnInit {\n  \n  fuelStation=[];\n  constructor(private router:Router,private activeRoute:ActivatedRoute,private bookservice:BookingService,private _snackBar: MatSnackBar) { }\n  \n  ngOnInit() {\n    if(navigator.geolocation){\n      navigator.geolocation.getCurrentPosition((position)=>{\n          var latlng = `${position.coords.latitude}, ${position.coords.longitude}`;\n          console.log(position.coords.latitude)\n          console.log(position.coords.longitude);\n          let URL =`https://developer.nrel.gov/api/alt-fuel-stations/v1.json?limit=10&api_key=BbnvEzYzwnjTK3gNEPZyHFgnAR5e5nRamHaH6WPf`\n          this.bookservice.getAddress(URL).subscribe((data)=>{\n             this.fuelStation= data['fuel_stations'];\n          })\n      })\n\n      console.log(this.fuelStation);\n\n\n  }\n    console.log(this.activeRoute.snapshot.data['data']);\n    console.log(Map);\n  }\n\n  onBooking(bookForm:NgForm){\n    this.bookservice.bookSlot(bookForm).subscribe((data)=>{\n      if(data['success']){\n        this._snackBar.open('Booking Succesfull', 'Ok', {\n          duration: 2000,\n        });\n      }\n    })\n  }\n\n\n  \n\n}\n\n\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n\r\n@Injectable()\r\nexport class BookingService{\r\n\r\n    constructor(private http:HttpClient){\r\n\r\n    }\r\n    getAddress(url){\r\n        return this.http.get(url)\r\n    }\r\n\r\n\r\n    bookSlot(bookForm:NgForm){\r\n        const URL=`pump/book/bookSlot`;\r\n        let data={\r\n            type:bookForm.controls.type.value,\r\n            station:bookForm.controls.station.value,\r\n            startTime:bookForm.controls.startTime.value,\r\n            endTime:bookForm.controls.endTime.value,\r\n            userId:localStorage.getItem('loggedInUser')\r\n        }\r\n        return this.http.post(URL,data)\r\n    }\r\n\r\n    loadGridData(){\r\n        return this.http.get(`pump/book/gridData`)\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BookingFormComponent } from './booking-form/booking-form.component';\nimport { BookSlotGridComponent } from './book-slot-grid/book-slot-grid.component';\nimport { BookingRoutingModule } from './booking.routing.module';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule } from '@angular/forms';\nimport { BookingFormResolver } from './bookingFormResolver';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BookingService } from './booking-service';\n\n\n\n@NgModule({\n  declarations: [BookingFormComponent, BookSlotGridComponent],\n  imports: [\n    CommonModule,\n    BookingRoutingModule,\n    MaterialModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers:[BookingFormResolver,BookingService]\n})\nexport class BookingModule { }\n","import { Route } from '@angular/compiler/src/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BookSlotGridComponent } from './book-slot-grid/book-slot-grid.component';\r\nimport { BookingFormComponent } from './booking-form/booking-form.component';\r\nimport { BookingFormResolver } from './bookingFormResolver';\r\n\r\n\r\nconst routes: Routes = [\r\n   \r\n    {\r\n        path:'grid',\r\n        component:BookSlotGridComponent\r\n      \r\n    },\r\n    {\r\n        path:'form',\r\n        component:BookingFormComponent,\r\n        resolve:{data:BookingFormResolver}\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forChild(routes)],\r\n    exports:[RouterModule]\r\n})\r\nexport class BookingRoutingModule{\r\n\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { FormArray } from '@angular/forms';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BookingService } from './booking-service';\r\n\r\nexport class BookingFormResolver implements Resolve<any>{\r\n\r\n    constructor(){\r\n        \r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n\r\n        \r\n    }\r\n}"],"sourceRoot":"webpack:///"}